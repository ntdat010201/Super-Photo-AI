#!/bin/bash

# Cursor Base Control Manager - Bash Version
# Script ƒë·ªÉ set v√† check cursor base control b·∫±ng curl

# Load environment variables from .env file
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
if [ -f "$SCRIPT_DIR/.env" ]; then
    source "$SCRIPT_DIR/.env"
else
    echo "‚ùå Kh√¥ng t√¨m th·∫•y file .env trong th∆∞ m·ª•c scripts!"
    echo "üí° Vui l√≤ng t·∫°o file .env v·ªõi c√°c bi·∫øn m√¥i tr∆∞·ªùng c·∫ßn thi·∫øt."
    exit 1
fi

echo "üöÄ B·∫Øt ƒë·∫ßu qu·∫£n l√Ω Cursor Base Control..."
echo "================================================"

# Ki·ªÉm tra xem COOKIE c√≥ ƒë∆∞·ª£c load t·ª´ .env kh√¥ng
if [ -z "$COOKIE" ]; then
    echo "‚ùå Bi·∫øn COOKIE kh√¥ng ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a trong file .env!"
    echo "üí° Vui l√≤ng c·∫≠p nh·∫≠t COOKIE trong file .env"
    exit 1
fi

echo "üì§ B∆∞·ªõc 1: Thi·∫øt l·∫≠p base control..."
echo "------------------------------"

# Set hard limit
SET_RESPONSE=$(curl --silent --location 'https://cursor.com/api/dashboard/set-hard-limit' \
  --header "User-Agent: $USER_AGENT" \
  --header "Accept: $ACCEPT" \
  --header "Accept-Language: $ACCEPT_LANGUAGE" \
  --header "Accept-Encoding: $ACCEPT_ENCODING" \
  --header "Referer: $REFERER" \
  --header "Content-Type: $CONTENT_TYPE" \
  --header "Origin: $ORIGIN" \
  --header "Connection: $CONNECTION" \
  --header "Cookie: $COOKIE" \
  --header "Sec-Fetch-Dest: $SEC_FETCH_DEST" \
  --header "Sec-Fetch-Mode: $SEC_FETCH_MODE" \
  --header "Sec-Fetch-Site: $SEC_FETCH_SITE" \
  --header "Priority: u=0" \
  --header "TE: $TE" \
  --data '{"hardLimit":0,"noUsageBasedAllowed":true,"hardLimitPerUser":0}' \
  --write-out "HTTPSTATUS:%{http_code}")

# Parse response
SET_BODY=$(echo $SET_RESPONSE | sed -E 's/HTTPSTATUS:[0-9]{3}$//')
SET_STATUS=$(echo $SET_RESPONSE | tr -d '\n' | sed -E 's/.*HTTPSTATUS:([0-9]{3})$/\1/')

echo "üìä Status Code: $SET_STATUS"
echo "üìù Response: $SET_BODY"

if [ "$SET_STATUS" -eq 200 ]; then
    echo "‚úÖ Thi·∫øt l·∫≠p base control th√†nh c√¥ng!"
else
    echo "‚ùå L·ªói khi thi·∫øt l·∫≠p base control: $SET_STATUS"
    exit 1
fi

echo ""
echo "üì• B∆∞·ªõc 2: Ki·ªÉm tra base control..."
echo "------------------------------"

# Get hard limit
GET_RESPONSE=$(curl --silent --location 'https://cursor.com/api/dashboard/get-hard-limit' \
  --header "User-Agent: $USER_AGENT" \
  --header "Accept: $ACCEPT" \
  --header "Accept-Language: $ACCEPT_LANGUAGE" \
  --header "Accept-Encoding: $ACCEPT_ENCODING" \
  --header "Referer: $REFERER" \
  --header "Content-Type: $CONTENT_TYPE" \
  --header "Origin: $ORIGIN" \
  --header "Connection: $CONNECTION" \
  --header "Cookie: $COOKIE" \
  --header "Sec-Fetch-Dest: $SEC_FETCH_DEST" \
  --header "Sec-Fetch-Mode: $SEC_FETCH_MODE" \
  --header "Sec-Fetch-Site: $SEC_FETCH_SITE" \
  --header "Priority: u=4" \
  --header "TE: $TE" \
  --data '{}' \
  --write-out "HTTPSTATUS:%{http_code}")

# Parse response
GET_BODY=$(echo $GET_RESPONSE | sed -E 's/HTTPSTATUS:[0-9]{3}$//')
GET_STATUS=$(echo $GET_RESPONSE | tr -d '\n' | sed -E 's/.*HTTPSTATUS:([0-9]{3})$/\1/')

echo "üìä Status Code: $GET_STATUS"
echo "üìù Response: $GET_BODY"

if [ "$GET_STATUS" -eq 200 ]; then
    echo "‚úÖ L·∫•y th√¥ng tin base control th√†nh c√¥ng!"
else
    echo "‚ùå L·ªói khi l·∫•y base control: $GET_STATUS"
    exit 1
fi

echo ""
echo "üîç B∆∞·ªõc 3: Ki·ªÉm tra k·∫øt qu·∫£..."
echo "------------------------------"

# Check if noUsageBasedAllowed is true
if echo "$GET_BODY" | grep -q '"noUsageBasedAllowed":true'; then
    echo "üéâ ƒê√£ set th√†nh c√¥ng base control"
    echo "================================================"
    echo "üéä HO√ÄN TH√ÄNH TH√ÄNH C√îNG!"
    exit 0
else
    echo "‚ö†Ô∏è  K·∫øt qu·∫£ kh√¥ng nh∆∞ mong ƒë·ª£i"
    echo "üìã D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c: $GET_BODY"
    echo "================================================"
    echo "üí• QUY TR√åNH TH·∫§T B·∫†I!"
    exit 1
fi